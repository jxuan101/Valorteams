{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jin\\\\Documents\\\\GitHub\\\\Valorteams\\\\client\\\\src\\\\components\\\\pages\\\\template.js\";\nimport './template.css';\nimport React from 'react';\nimport Rankings from './rankings';\nimport { withRouter } from 'react-router';\nimport apis from '../../api';\nimport { findImage, findBackground } from '../helper.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Template extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = async () => {\n      await apis.getTeamsByMap(this.props.map).then(res => {\n        if (res.status === 200) {\n          this.setState({\n            teams: res.data.data,\n            loading: false,\n            hasError: false\n          });\n        }\n      }).catch(e => {\n        this.setState({\n          hasError: true\n        });\n      });\n    };\n\n    this.createList = () => {\n      const counter = 1;\n      const teams = this.state.teams;\n      const listItems = teams.map(item => {\n        if (counter === 1) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"team-card\",\n            style: {\n              border: '3px rgb(219, 198, 2) solid'\n            },\n            children: item.team.map((agent, index) => {\n              return /*#__PURE__*/_jsxDEV(\"img\", {\n                src: findImage(agent),\n                className: \"agent-img\",\n                alt: agent,\n                title: agent\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 33\n              }, this);\n            })\n          }, item._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, this);\n        } else if (counter === 2) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"team-card\",\n            style: {\n              border: '3px rgb(58, 58, 58) solid'\n            },\n            children: item.team.map((agent, index) => {\n              return /*#__PURE__*/_jsxDEV(\"img\", {\n                src: findImage(agent),\n                className: \"agent-img\",\n                alt: agent,\n                title: agent\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 33\n              }, this);\n            })\n          }, item._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this);\n        } else if (counter === 3) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"team-card\",\n            style: {\n              border: '3px rgb(58, 58, 58) solid'\n            },\n            children: item.team.map((agent, index) => {\n              return /*#__PURE__*/_jsxDEV(\"img\", {\n                src: findImage(agent),\n                className: \"agent-img\",\n                alt: agent,\n                title: agent\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 33\n              }, this);\n            })\n          }, item._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this);\n        } else {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"team-card\",\n            style: {\n              border: '3px rgb(58, 58, 58) solid'\n            },\n            children: item.team.map((agent, index) => {\n              return /*#__PURE__*/_jsxDEV(\"img\", {\n                src: findImage(agent),\n                className: \"agent-img\",\n                alt: agent,\n                title: agent\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 33\n              }, this);\n            })\n          }, item._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this);\n        }\n\n        counter += 1;\n      });\n      return listItems;\n    };\n\n    this.state = {\n      teams: [],\n      loading: true,\n      hasError: false\n    };\n  }\n\n  render() {\n    const {\n      loading,\n      hasError\n    } = this.state;\n    if (loading) return null;\n\n    if (hasError) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error\",\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          className: \"error-text\",\n          children: \"Unable to access the database. Refresh the page or please try again later.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"full-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-img\",\n          style: {\n            backgroundImage: `url(${findBackground(this.props.map)})`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"teams-container\",\n          children: [/*#__PURE__*/_jsxDEV(Rankings, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }, this), this.createList()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n}\n\n;\nexport default _c = withRouter(Template);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["C:/Users/Jin/Documents/GitHub/Valorteams/client/src/components/pages/template.js"],"names":["React","Rankings","withRouter","apis","findImage","findBackground","Template","Component","constructor","props","componentDidMount","getTeamsByMap","map","then","res","status","setState","teams","data","loading","hasError","catch","e","createList","counter","state","listItems","item","border","team","agent","index","_id","render","backgroundImage"],"mappings":"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","sourcesContent":["import './template.css';\r\nimport React from 'react';\r\nimport Rankings from './rankings';\r\nimport { withRouter } from 'react-router';\r\n\r\nimport apis from '../../api';\r\n\r\nimport { findImage, findBackground } from '../helper.js';\r\n\r\nclass Template extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            teams: [],\r\n            loading: true,\r\n            hasError: false,\r\n        };\r\n    }\r\n\r\n    componentDidMount = async () => {\r\n        await apis.getTeamsByMap(this.props.map).then(res => {\r\n            if (res.status === 200) {\r\n                this.setState({\r\n                    teams: res.data.data,\r\n                    loading: false,\r\n                    hasError: false,\r\n                });\r\n            }\r\n        }).catch(e => {\r\n            this.setState({\r\n                hasError: true,\r\n            })\r\n        });\r\n    }\r\n\r\n    createList = () => {\r\n        const counter = 1;\r\n        const teams = this.state.teams;\r\n        const listItems = teams.map(item => {\r\n            if (counter === 1) {\r\n                return (<div className = \"team-card\" key = {item._id} style = {\r\n                    { border: '3px rgb(219, 198, 2) solid', }\r\n                }>\r\n                    {item.team.map((agent, index) => {\r\n                        return (<img src = {findImage(agent)} className = \"agent-img\" alt = {agent} title = {agent} key = {index}/>);\r\n                    })}\r\n                </div>);\r\n            }\r\n            else if (counter === 2) {\r\n                return (<div className = \"team-card\" key = {item._id} style = {\r\n                    { border: '3px rgb(58, 58, 58) solid', }\r\n                }>\r\n                    {item.team.map((agent, index) => {\r\n                        return (<img src = {findImage(agent)} className = \"agent-img\" alt = {agent} title = {agent} key = {index}/>);\r\n                    })}\r\n                </div>);\r\n            }\r\n            else if (counter === 3) {\r\n                return (<div className = \"team-card\" key = {item._id} style = {\r\n                    { border: '3px rgb(58, 58, 58) solid', }\r\n                }>\r\n                    {item.team.map((agent, index) => {\r\n                        return (<img src = {findImage(agent)} className = \"agent-img\" alt = {agent} title = {agent} key = {index}/>);\r\n                    })}\r\n                </div>);\r\n            }\r\n            else {\r\n                return (<div className = \"team-card\" key = {item._id} style = {\r\n                    { border: '3px rgb(58, 58, 58) solid', }\r\n                }>\r\n                    {item.team.map((agent, index) => {\r\n                        return (<img src = {findImage(agent)} className = \"agent-img\" alt = {agent} title = {agent} key = {index}/>);\r\n                    })}\r\n                </div>);\r\n            }\r\n            counter += 1;\r\n        })\r\n\r\n        return listItems;\r\n\r\n    }\r\n\r\n    render() {\r\n        const { loading, hasError } = this.state;\r\n\r\n        if (loading) return null;\r\n        \r\n        if (hasError) {\r\n            return (\r\n                <div className = \"error\">\r\n                    <b className = \"error-text\">Unable to access the database. Refresh the page or please try again later.</b>\r\n                </div>\r\n            );\r\n        }\r\n        else {\r\n            return (\r\n                <div className = \"full-container\">\r\n                    <div className = \"bg-img\" style = {\r\n                        { \r\n                            backgroundImage: `url(${findBackground(this.props.map)})`,\r\n                        }\r\n                    }/>\r\n                    <div className = \"teams-container\">\r\n                        <Rankings/>\r\n                        {this.createList()}\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n};\r\n\r\nexport default withRouter(Template);"]},"metadata":{},"sourceType":"module"}